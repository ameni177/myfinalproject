name: Deploy to EC2 with Terraform & Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan

      - name: Terraform apply
        run: terraform apply -auto-approve

      - name: Get EC2 public IP
        id: ec2_ip
        run: echo "EC2_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV

      # Set environment variable for EC2 IP in frontend's .env
      - name: Set environment variable for EC2 IP
        run: echo "REACT_APP_EC2_IP=${{ env.EC2_IP }}" >> frontend/.env

      - name: Build Docker images
        run: |
          docker build -t my-frontend ./frontend
          docker build -t my-backend ./backend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker images
        run: |
          docker push my-frontend
          docker push my-backend

      - name: Deploy to EC2 via SSH
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          # Set up SSH
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # SSH into the EC2 instance and deploy Docker containers
          ssh -o StrictHostKeyChecking=no ec2-user@${{ env.EC2_IP }} << 'EOF'
            docker pull my-frontend
            docker pull my-backend
            docker run -d -p 80:80 --name frontend my-frontend
            docker run -d -p 3001:3001 --name backend my-backend
          EOF
